const S = "", D = (A) => Uint8Array.from(atob(A), (I) => I.charCodeAt(0)), C = typeof window < "u" && window.Blob && new Blob(["URL.revokeObjectURL(import.meta.url);", D(S)], { type: "text/javascript;charset=utf-8" });
function i(A) {
  let I;
  try {
    if (I = C && (window.URL || window.webkitURL).createObjectURL(C), !I) throw "";
    const g = new Worker(I, {
      type: "module",
      name: A == null ? void 0 : A.name
    });
    return g.addEventListener("error", () => {
      (window.URL || window.webkitURL).revokeObjectURL(I);
    }), g;
  } catch {
    return new Worker(
      "data:text/javascript;base64," + S,
      {
        type: "module",
        name: A == null ? void 0 : A.name
      }
    );
  }
}
class w {
  constructor(I) {
    this.counter = 0, this.workers = [], this.listenerList = [], (!I || I < 1) && (I = navigator == null ? void 0 : navigator.hardwareConcurrency, I < 1 && (I = 1));
    for (let g = 0; g < I; g++)
      this._addOneWorker();
  }
  _addOneWorker() {
    const I = new i();
    I.onmessage = (g) => {
      for (const B of this.listenerList)
        B(g);
    }, this.workers.push(I);
  }
  postMessage(I, g) {
    this.workers[++this.counter] || (this.counter = 0), this.workers[this.counter].postMessage(I, g);
  }
  addListener(I) {
    this.listenerList.push(I);
  }
  removeListener(I) {
    for (const g in this.listenerList)
      if (this.listenerList[g] == I) {
        this.listenerList.splice(g, 1);
        return;
      }
  }
}
export {
  w as default
};
